version: '3.8'

services:
  vmware-vcf-architecture:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vmware-vcf-architecture
    restart: unless-stopped
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    env_file:
      - .env
    volumes:
      - ./config.yml:/app/config.yml:ro
      - ./logs:/app/logs
    ports:
      - "8080:8080"
      - "9090:9090"  # Metrics port
    healthcheck:
      test: ["CMD", "python", "main.py", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vmware-network

  # Optional: Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - vmware-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - vmware-network
    profiles:
      - monitoring

networks:
  vmware-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
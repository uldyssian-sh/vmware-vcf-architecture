name: Security Scan

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pip-audit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run Bandit security scan
        run: |
          bandit -r . -f json -o bandit-results.json || true
          bandit -r . -f txt || true
      
      - name: Run Safety check
        run: |
          safety check --json --output safety-results.json || true
          safety check || true
      
      - name: Run pip-audit
        run: |
          pip-audit --format=json --output=pip-audit-results.json || true
          pip-audit || true
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Upload security scan artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: |
            bandit-results.json
            safety-results.json
            pip-audit-results.json
            trivy-results.sarif
          retention-days: 30


